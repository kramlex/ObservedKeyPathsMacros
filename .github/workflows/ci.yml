name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/org.swift.swiftpm
          .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Cache Xcode Derived Data
      uses: actions/cache@v4
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-xcode-${{ hashFiles('**/*.xcodeproj', '**/*.xcworkspace') }}
        restore-keys: |
          ${{ runner.os }}-xcode-
      
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Show Swift version
      run: swift --version
      
    - name: Build package
      run: swift build
      
    - name: Run tests
      run: swift test
      
    - name: Build sample
      run: |
        cd Examples
        swift build
        echo "Sample build completed successfully"
        
    - name: Verify sample compilation
      run: |
        cd Examples
        swift build --verbose
        echo "Sample compilation verification completed"

  lint:
    name: Lint
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Cache SwiftLint
      uses: actions/cache@v4
      with:
        path: ~/.cache/swiftlint
        key: ${{ runner.os }}-swiftlint-${{ hashFiles('**/.swiftlint.yml') }}
        restore-keys: |
          ${{ runner.os }}-swiftlint-
      
    - name: Install SwiftLint
      run: |
        brew install swiftlint
        swiftlint version
        
    - name: Verify SwiftLint version
      run: |
        if [ "$(swiftlint version)" != "0.59.1" ]; then
          echo "SwiftLint version mismatch. Expected: 0.59.1, Got: $(swiftlint version)"
          exit 1
        fi
        
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging

  security:
    name: Security Scan
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/org.swift.swiftpm
          .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
      
    - name: Run security audit
      run: |
        swift package resolve
        swift package show-dependencies --format json > dependencies.json
        
    - name: Check for known vulnerabilities
      run: |
        # Add security scanning logic here
        echo "Security scan completed"
