name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: macos-latest
    
    strategy:
      matrix:
        xcode: ['15.0', '15.1', '15.2']
        swift: ['5.10', '5.11']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app
      
    - name: Show Xcode version
      run: xcodebuild -version
      
    - name: Show Swift version
      run: swift --version
      
    - name: Build package
      run: swift build
      
    - name: Run tests
      run: swift test
      
    - name: Build for iOS
      run: |
        swift build -Xswiftc -sdk -Xswiftc $(xcrun --sdk iphonesimulator --show-sdk-path) -Xswiftc -target -Xswiftc arm64-apple-ios17.0-simulator
        
    - name: Build for macOS
      run: |
        swift build -Xswiftc -sdk -Xswiftc $(xcrun --sdk macosx --show-sdk-path) -Xswiftc -target -Xswiftc arm64-apple-macos10.15

  lint:
    name: Lint
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install SwiftLint
      run: |
        brew install swiftlint
        
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging

  security:
    name: Security Scan
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: |
        swift package resolve
        swift package show-dependencies --format json > dependencies.json
        
    - name: Check for known vulnerabilities
      run: |
        # Add security scanning logic here
        echo "Security scan completed"
